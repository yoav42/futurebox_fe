name: CI & Docker Publish

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      AWS_REGION: eu-west-1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install
        run: npm install
      - name: Build
        run: |
          export VITE_API_BASE=${{ vars.FE_API_BASE || 'http://34.245.209.163:8000' }}
          npm run build

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/futurebox_fe
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-s3-cloudfront:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: eu-west-1
      S3_BUCKET: futurebox-fe-${{ steps.acct.outputs.id }}-eu-west-1
      CF_DISTRIBUTION_ID: ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: AWS account id
        id: acct
        run: echo "id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install
        run: npm install
      - name: Build
        run: |
          export VITE_API_BASE=${{ vars.FE_API_BASE || 'http://34.245.209.163:8000' }}
          npm run build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Sync to S3
        run: |
          aws s3 sync dist s3://${{ env.S3_BUCKET }} --delete --cache-control max-age=31536000,public || true
          aws s3 cp dist/index.html s3://${{ env.S3_BUCKET }}/index.html --cache-control no-cache --metadata-directive REPLACE
      - name: Invalidate CloudFront (skipped)
        if: env.CF_DISTRIBUTION_ID != ''
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CF_DISTRIBUTION_ID }} --paths '/*'


